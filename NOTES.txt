Notes
------------------------------------------------------------------------------

- How to daemonize syncilainen?
    - seem to have some problems with subprocess when deamonized
    - can we rely on upstart/launchd to do the daemonization?

- Need to refactor code to properly take into account the config file
    - i.e. accomodate multiple watch directories, each with different configurations..
        - currently:
            "auto_pull_secs": 30,
            "path": "~/WORKING/syncilainen/sandbox",
            "notifier": {
                "enabled": true,
                "disable_after_n_errors": 3
             },
             "action": {
                "class": "vcs",
                "type": "git",
                "remote": "origin"
            }

- Should we try to implement hg or bzr as an alternative to git?
    - At least to 'prove' the abstraction

- Should there be a way to start a watch directory without creating a local and remote repository and configuring them both?
    - probably not
    - should be some documentation/example

- Should we add a push even when the status list is empty?
    - I think this is done?
    - This should be done..
    - Yes, I think it is done...
    - Is it though?

- Does linux version need a ^C for pull_timer to work the first time?
    - This seems to be the case..
        - How to fix?

- Does linux version do debug logging correctly?
    - It seems not
        - Displays the output format in a debug manner,
          but seem to only be showing info level logging

- Whhat is this actually good for?
    - a glorified notebook?
        - is it that glorified anyway?
        - cannot be used without quite elaborate syncilainen setup:
            - "install" syncilainen and dependencies
            - clone git repo
            - create/add entry to syncilainen.json
            - start syncilainen

- check out:
    - https://github.com/bazaarlabs/gitdocs/ [ruby]
    - http://sparkleshare.org/ [also based on git, lots of native clients]

- my USPs?
    - could vary VCS?
    
- conflict resolution
    - e.g. A: foo.txt B: foo.txt -> foo.txt foo[B].txt
    - i.e. conflicting file gets moved to a new file name and the original preserved?
    - should there be any notificaition for conflicts?






